"------------------------------------------------------------"
"test define"
(define test-define "defined once")
test-define
(define test-define "redefined")
test-define

"------------------------------------------------------------"
"test functions"
(define pi 3.14)
(define circle-area
  (lambda (radius)
    (* pi radius radius)))
(circle-area 100)
(circle-area 100.0)

"------------------------------------------------------------"
"test strings"
(define test-str (str-concat (list "0" "1" "23")))
test-str
(str-len test-str)
(str-substr test-str 0 0)
(str-substr test-str 0 2)
(str-substr test-str 3 3)
(str-substr test-str 3 4)

"------------------------------------------------------------"
"test lists"
(define lst (list 1 2 3 4))
(first lst)
(rest lst)
(rest (rest lst))
(nth lst 3)
(map (lambda (n) (+ n 1)) lst)
(filter (lambda (n) (< n 3)) lst)

"------------------------------------------------------------"
"test structs"
(define test-struct (struct 'id 0 'hello "world"))
test-struct
(struct-set! test-struct 'id 100)
test-struct
(struct-get test-struct 'hello)

"------------------------------------------------------------"
"test fib"
(define fib
  (lambda (n)
    (define too-small? (< n 2))
    (if too-small? n
      (do
        (define fib-1 (fib (- n 1)))
	(define fib-2 (fib (- n 2)))
	(+ fib-1 fib-2)))))
fib
(fib 25)

"------------------------------------------------------------"
"test equal"
(= (list 1 2 (struct 'text "what")) (list 1 2 (struct 'text "what")))
(= "text" (str-concat (list "te" "xt")))

"------------------------------------------------------------"
"test modules"
(import "/dev/null")
(*modules*)
"------------------------------------------------------------"
